# 端口
PORT=4365
# 根路由
ROOT_URL=''
# 启用多进程(true/false)，自动扩展进程到CPU个数，最大化利用服务器性能
ENABLE_CLUSTER=false
# 超时时间(毫秒)
TIMEOUT_MAX_AGE=15000

# token或ip配置后就会开启访问控制
# 以下三项的访问控制关系如下
# token正确和在白名单内都会直接放行
# 若只配置了token则token不正确的都会拒绝
# 若只配置了白名单则不在白名单内的都会拒绝
# 若只配置了黑名单则只有黑名单内的会被拒绝

# 配置访问token，有token的可以跳过限流等权限验证
TOKEN=''
# IP黑白名单，多个IP使用“,”分隔。例如127.0.0.1,localhost
IP_WHITELIST=''
IP_BLACKLIST=''

# 返回的item项数
ITEM_LIMIT=10

# 限流区间，每多少秒
LIMIT_INTERVAL=60
# 限流值，每个区间内可访问多少次
LIMIT_MAX=30

# 每日访问次数上限，超过就拉黑。通过权限验证的不受本项限制
DAY_LIMIT_MAX=1000
#封禁时间(小时)
BAN_TIME=24

# 静态文件缓存时间(秒)
STATIC_MAX_AGE=86400

# 缓存类型 redis/memory
CACHE_TYPE='memory'
# 缓存时间(秒)
CACHE_AGE=300
# cache的最大长度，默认无穷大
CACHE_MAX=''

# Redis配置
REDIS_PORT=6379
REDIS_HOST='127.0.0.1'
REDIS_PASSWORD=''
# Redis前缀
REDIS_KEY_PREFIX='my-redis-'
# 是否阻止爬虫
DISALLOW_ROBOT=true

# 时区，默认东八区
TZ='Asia/Shanghai'

# 错误推送（可选）
# 当服务器出现异常的时候会及时推送。有助于反馈bug，但是使用不当会造成死循环调用，非开发人员慎用
# 钉钉推送
# 群机器人 ACCESS_TOKEN
DINGTALK_ACCESS_TOKEN=''
# 加密 SECRET ，可选，但是建议使用
DINGTALK_SECRET=''